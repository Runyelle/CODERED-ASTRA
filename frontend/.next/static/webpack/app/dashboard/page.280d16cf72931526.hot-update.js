"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./lib/data-storage.ts":
/*!*****************************!*\
  !*** ./lib/data-storage.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBuyerListings: () => (/* binding */ getBuyerListings),\n/* harmony export */   getSellerListings: () => (/* binding */ getSellerListings),\n/* harmony export */   getUniqueLocations: () => (/* binding */ getUniqueLocations),\n/* harmony export */   getUniqueMaterials: () => (/* binding */ getUniqueMaterials),\n/* harmony export */   saveBuyerListing: () => (/* binding */ saveBuyerListing),\n/* harmony export */   saveSellerListing: () => (/* binding */ saveSellerListing),\n/* harmony export */   searchListings: () => (/* binding */ searchListings),\n/* harmony export */   updateBuyerListingStatus: () => (/* binding */ updateBuyerListingStatus),\n/* harmony export */   updateSellerListingStatus: () => (/* binding */ updateSellerListingStatus)\n/* harmony export */ });\n// Data storage utilities for buyer and seller listings\n// Generate unique ID\nconst generateId = ()=>{\n    return \"\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n};\n// Get current timestamp\nconst getTimestamp = ()=>{\n    return new Date().toISOString();\n};\n// Storage keys\nconst SELLER_LISTINGS_KEY = 'wasteflow_seller_listings';\nconst BUYER_LISTINGS_KEY = 'wasteflow_buyer_listings';\n// Initialize storage on page load (clear for demo)\nconst initializeStorage = ()=>{\n    if (true) {\n        // Clear storage on page refresh for demo purposes\n        localStorage.removeItem(SELLER_LISTINGS_KEY);\n        localStorage.removeItem(BUYER_LISTINGS_KEY);\n    }\n};\n// Initialize on module load\nif (true) {\n    initializeStorage();\n}\n// Seller listing functions\nconst saveSellerListing = (data)=>{\n    const listing = {\n        ...data,\n        id: generateId(),\n        status: 'pending',\n        createdAt: getTimestamp(),\n        updatedAt: getTimestamp()\n    };\n    if (true) {\n        const existing = getSellerListings();\n        const updated = [\n            ...existing,\n            listing\n        ];\n        localStorage.setItem(SELLER_LISTINGS_KEY, JSON.stringify(updated));\n    }\n    return listing;\n};\nconst getSellerListings = ()=>{\n    if (false) {}\n    try {\n        const data = localStorage.getItem(SELLER_LISTINGS_KEY);\n        return data ? JSON.parse(data) : [];\n    } catch (e) {\n        return [];\n    }\n};\nconst updateSellerListingStatus = (id, status)=>{\n    if (false) {}\n    const listings = getSellerListings();\n    const updated = listings.map((listing)=>listing.id === id ? {\n            ...listing,\n            status,\n            updatedAt: getTimestamp()\n        } : listing);\n    localStorage.setItem(SELLER_LISTINGS_KEY, JSON.stringify(updated));\n};\n// Buyer listing functions\nconst saveBuyerListing = (data)=>{\n    const listing = {\n        ...data,\n        id: generateId(),\n        status: 'pending',\n        createdAt: getTimestamp(),\n        updatedAt: getTimestamp()\n    };\n    if (true) {\n        const existing = getBuyerListings();\n        const updated = [\n            ...existing,\n            listing\n        ];\n        localStorage.setItem(BUYER_LISTINGS_KEY, JSON.stringify(updated));\n    }\n    return listing;\n};\nconst getBuyerListings = ()=>{\n    if (false) {}\n    try {\n        const data = localStorage.getItem(BUYER_LISTINGS_KEY);\n        return data ? JSON.parse(data) : [];\n    } catch (e) {\n        return [];\n    }\n};\nconst updateBuyerListingStatus = (id, status)=>{\n    if (false) {}\n    const listings = getBuyerListings();\n    const updated = listings.map((listing)=>listing.id === id ? {\n            ...listing,\n            status,\n            updatedAt: getTimestamp()\n        } : listing);\n    localStorage.setItem(BUYER_LISTINGS_KEY, JSON.stringify(updated));\n};\n// Search functions - searches sample data from backend, not user's own listings\nconst searchListings = async (query, materialType, location, listingType)=>{\n    try {\n        // Fetch sample data from backend API\n        const response = await fetch('/api/companies/demo');\n        if (!response.ok) {\n            console.error('Failed to fetch sample data');\n            return [];\n        }\n        const data = await response.json();\n        const companies = data.companies || [];\n        // Filter companies based on search criteria\n        let results = companies.filter((company)=>{\n            var _company_waste_stream_material, _company_waste_stream, _company_material_needs_material, _company_material_needs, _company_waste_stream_material1, _company_waste_stream1, _company_material_needs_material1, _company_material_needs1, _company_location_city, _company_location, _company_location_state, _company_location1;\n            const isSeller = company.type === 'producer' && company.waste_stream;\n            const isBuyer = company.type === 'consumer' && company.material_needs;\n            // Check if company matches the listing type filter\n            if (listingType === 'seller' && !isSeller) return false;\n            if (listingType === 'buyer' && !isBuyer) return false;\n            // Check query match\n            const matchesQuery = !query || company.name.toLowerCase().includes(query.toLowerCase()) || company.industry.toLowerCase().includes(query.toLowerCase()) || isSeller && ((_company_waste_stream = company.waste_stream) === null || _company_waste_stream === void 0 ? void 0 : (_company_waste_stream_material = _company_waste_stream.material) === null || _company_waste_stream_material === void 0 ? void 0 : _company_waste_stream_material.toLowerCase().includes(query.toLowerCase())) || isBuyer && ((_company_material_needs = company.material_needs) === null || _company_material_needs === void 0 ? void 0 : (_company_material_needs_material = _company_material_needs.material) === null || _company_material_needs_material === void 0 ? void 0 : _company_material_needs_material.toLowerCase().includes(query.toLowerCase()));\n            // Check material type match\n            const matchesMaterial = !materialType || isSeller && ((_company_waste_stream1 = company.waste_stream) === null || _company_waste_stream1 === void 0 ? void 0 : (_company_waste_stream_material1 = _company_waste_stream1.material) === null || _company_waste_stream_material1 === void 0 ? void 0 : _company_waste_stream_material1.toLowerCase().includes(materialType.toLowerCase())) || isBuyer && ((_company_material_needs1 = company.material_needs) === null || _company_material_needs1 === void 0 ? void 0 : (_company_material_needs_material1 = _company_material_needs1.material) === null || _company_material_needs_material1 === void 0 ? void 0 : _company_material_needs_material1.toLowerCase().includes(materialType.toLowerCase()));\n            // Check location match\n            const matchesLocation = !location || ((_company_location = company.location) === null || _company_location === void 0 ? void 0 : (_company_location_city = _company_location.city) === null || _company_location_city === void 0 ? void 0 : _company_location_city.toLowerCase().includes(location.toLowerCase())) || ((_company_location1 = company.location) === null || _company_location1 === void 0 ? void 0 : (_company_location_state = _company_location1.state) === null || _company_location_state === void 0 ? void 0 : _company_location_state.toLowerCase().includes(location.toLowerCase()));\n            return matchesQuery && matchesMaterial && matchesLocation;\n        });\n        // Transform to our listing format\n        return results.map((company)=>{\n            var _company_contact, _company_contact1, _company_contact2, _company_location, _company_location1, _company_waste_stream, _company_waste_stream1, _company_waste_stream_quantity_tons_year, _company_waste_stream2, _company_waste_stream3, _company_waste_stream_current_disposal, _company_waste_stream4, _company_waste_stream_current_disposal_cost_per_ton, _company_waste_stream_current_disposal1, _company_waste_stream5, _company_material_needs, _company_material_needs1, _company_material_needs_quantity_tons_year, _company_material_needs2, _company_material_needs3, _company_material_needs_current_sourcing, _company_material_needs4, _company_material_needs_current_sourcing_cost_per_ton, _company_material_needs_current_sourcing1, _company_material_needs5;\n            return {\n                id: company.id.toString(),\n                companyName: company.name,\n                contactName: ((_company_contact = company.contact) === null || _company_contact === void 0 ? void 0 : _company_contact.name) || '',\n                email: ((_company_contact1 = company.contact) === null || _company_contact1 === void 0 ? void 0 : _company_contact1.email) || '',\n                phone: ((_company_contact2 = company.contact) === null || _company_contact2 === void 0 ? void 0 : _company_contact2.phone) || '',\n                location: \"\".concat((_company_location = company.location) === null || _company_location === void 0 ? void 0 : _company_location.city, \", \").concat((_company_location1 = company.location) === null || _company_location1 === void 0 ? void 0 : _company_location1.state),\n                status: 'pending',\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString(),\n                type: company.type === 'producer' ? 'seller' : 'buyer',\n                ...company.type === 'producer' ? {\n                    wasteType: ((_company_waste_stream = company.waste_stream) === null || _company_waste_stream === void 0 ? void 0 : _company_waste_stream.material) || '',\n                    wasteDescription: ((_company_waste_stream1 = company.waste_stream) === null || _company_waste_stream1 === void 0 ? void 0 : _company_waste_stream1.description) || '',\n                    chemicalComposition: [],\n                    quantity: ((_company_waste_stream2 = company.waste_stream) === null || _company_waste_stream2 === void 0 ? void 0 : (_company_waste_stream_quantity_tons_year = _company_waste_stream2.quantity_tons_year) === null || _company_waste_stream_quantity_tons_year === void 0 ? void 0 : _company_waste_stream_quantity_tons_year.toString()) || '',\n                    unit: 'tons',\n                    frequency: ((_company_waste_stream3 = company.waste_stream) === null || _company_waste_stream3 === void 0 ? void 0 : _company_waste_stream3.availability) || '',\n                    currentDisposal: ((_company_waste_stream4 = company.waste_stream) === null || _company_waste_stream4 === void 0 ? void 0 : (_company_waste_stream_current_disposal = _company_waste_stream4.current_disposal) === null || _company_waste_stream_current_disposal === void 0 ? void 0 : _company_waste_stream_current_disposal.method) || '',\n                    disposalCost: ((_company_waste_stream5 = company.waste_stream) === null || _company_waste_stream5 === void 0 ? void 0 : (_company_waste_stream_current_disposal1 = _company_waste_stream5.current_disposal) === null || _company_waste_stream_current_disposal1 === void 0 ? void 0 : (_company_waste_stream_current_disposal_cost_per_ton = _company_waste_stream_current_disposal1.cost_per_ton) === null || _company_waste_stream_current_disposal_cost_per_ton === void 0 ? void 0 : _company_waste_stream_current_disposal_cost_per_ton.toString()) || '',\n                    selectedCompanies: []\n                } : {\n                    materialType: ((_company_material_needs = company.material_needs) === null || _company_material_needs === void 0 ? void 0 : _company_material_needs.material) || '',\n                    materialDescription: ((_company_material_needs1 = company.material_needs) === null || _company_material_needs1 === void 0 ? void 0 : _company_material_needs1.description) || '',\n                    materialSpecs: [],\n                    quantity: ((_company_material_needs2 = company.material_needs) === null || _company_material_needs2 === void 0 ? void 0 : (_company_material_needs_quantity_tons_year = _company_material_needs2.quantity_tons_year) === null || _company_material_needs_quantity_tons_year === void 0 ? void 0 : _company_material_needs_quantity_tons_year.toString()) || '',\n                    unit: 'tons',\n                    frequency: ((_company_material_needs3 = company.material_needs) === null || _company_material_needs3 === void 0 ? void 0 : _company_material_needs3.frequency) || '',\n                    currentSourcing: ((_company_material_needs4 = company.material_needs) === null || _company_material_needs4 === void 0 ? void 0 : (_company_material_needs_current_sourcing = _company_material_needs4.current_sourcing) === null || _company_material_needs_current_sourcing === void 0 ? void 0 : _company_material_needs_current_sourcing.primary_source) || '',\n                    sourcingCost: ((_company_material_needs5 = company.material_needs) === null || _company_material_needs5 === void 0 ? void 0 : (_company_material_needs_current_sourcing1 = _company_material_needs5.current_sourcing) === null || _company_material_needs_current_sourcing1 === void 0 ? void 0 : (_company_material_needs_current_sourcing_cost_per_ton = _company_material_needs_current_sourcing1.cost_per_ton) === null || _company_material_needs_current_sourcing_cost_per_ton === void 0 ? void 0 : _company_material_needs_current_sourcing_cost_per_ton.toString()) || '',\n                    selectedSuppliers: []\n                }\n            };\n        });\n    } catch (error) {\n        console.error('Error searching listings:', error);\n        return [];\n    }\n};\n// Get unique materials and locations for dropdowns\nconst getUniqueMaterials = ()=>{\n    const sellers = getSellerListings();\n    const buyers = getBuyerListings();\n    const materials = new Set();\n    sellers.forEach((seller)=>materials.add(seller.wasteType));\n    buyers.forEach((buyer)=>materials.add(buyer.materialType));\n    return Array.from(materials).sort();\n};\nconst getUniqueLocations = ()=>{\n    const sellers = getSellerListings();\n    const buyers = getBuyerListings();\n    const locations = new Set();\n    sellers.forEach((seller)=>locations.add(seller.location));\n    buyers.forEach((buyer)=>locations.add(buyer.location));\n    return Array.from(locations).sort();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/data-storage.ts\n"));

/***/ })

});